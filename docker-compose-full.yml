version: '3.8'

services:
  # Streamlit version
  resume-roaster-streamlit:
    build:
      context: .
      dockerfile: Dockerfile_streamlit
    ports:
      - "8501:8501"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - streamlit

  # Flask version
  resume-roaster-flask:
    build:
      context: .
      dockerfile: Dockerfile_flask
    ports:
      - "5000:5000"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - FLASK_DEBUG=False
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    profiles:
      - flask

  # Nginx for production (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - resume-roaster-flask
    restart: unless-stopped
    profiles:
      - production

name: Deploy to Netlify

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test imports
      run: |
        python -c "
        import sys
        sys.path.append('.')
        try:
            from config import Config
            from ai_service import ResumeRoaster
            from file_processor import sanitize_text
            print('✅ All imports successful')
        except ImportError as e:
            print(f'❌ Import error: {e}')
            sys.exit(1)
        "
        
    - name: Validate project structure
      run: |
        python -c "
        import os
        required_files = [
            'config.py',
            'ai_service.py', 
            'file_processor.py',
            'utils.py',
            'requirements.txt',
            'netlify.toml',
            'public/index.html',
            'netlify/functions/roast.py',
            'netlify/functions/improve.py'
        ]
        
        missing = [f for f in required_files if not os.path.exists(f)]
        if missing:
            print(f'❌ Missing files: {missing}')
            exit(1)
        else:
            print('✅ All required files present')
        "
        
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './public'
        functions-dir: './netlify/functions'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: true
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 1
